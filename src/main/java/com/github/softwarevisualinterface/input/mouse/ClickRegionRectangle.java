package com.github.softwarevisualinterface.input.mouse;

/**
 * This class implements the Detectable interface to specify a rectangular region of the screen
 * for which a ClickComponent object may generate a defined code value when interacted with.
 * 
 * @author Ada Clevinger
 *
 */

public class ClickRegionRectangle implements Detectable{

//---  Instance Variables   -------------------------------------------------------------------
	
	/** int value representing the bottom right corner's x coordinate of the specified rectangular region in an arbitrary coordinate plane*/
	private int x;
	/** int value representing the top left corner's x coordinate of the specified rectangular region in an arbitrary coordinate plane*/
	private int y;
	/** int value representing the bottom right corner's y coordinate of the specified rectangular region in an arbitrary coordinate plane*/
	private int width;
	/** int value representing the top left corner's y coordinate of the specified rectangular region in an arbitrary coordinate plane*/
	private int height;
	/** int value describing the code value that will be generated when this ClickRegionRectangle object is triggered*/
	private int code;
	
	private int priority;
	
//---  Constructors   -------------------------------------------------------------------------
	
	/**
	 * Constructor for objects of the ClickRegionRectangle type that takes an array of integer
	 * values representing the coordinates of the top left corner (x, y) and bottom right corner
	 * (x, y), as well as the code value generated by this object when clicked.
	 * 
	 * Five int values in the array: xHigh, yHigh, xLow, yLow, code.
	 * 
	 * See other constructor for more holistic approach.
	 * 
	 * @param in - int[] object containing two coordinate positions (to specify a rectangular region) and the generated code value when triggered.
	 */
	
	public ClickRegionRectangle(int[] in) {
		x = in[0];
		y = in[1];
		width = in[2];
		height = in[3];
		code = in[4];
		priority = in[5];
	}
	
	/**
	 * Constructor for objects of the ClickRegionRectangle type that takes in values to describe
	 * the top-left and bottom-right corners of a rectangle in an arbitrary coordinate plane (expected
	 * to be a Panel in which the origin is the top-left corner) as well as a code value that will
	 * be generated whenever this ClickRegionRectangle registers being selected.
	 * 
	 * @param lowX - int value representing the lower x coordinate of this rectangular region
	 * @param lowY - int value representing the lower y coordinate of this rectangular region
	 * @param highX - int value representing the upper x coordinate of this rectangular region
	 * @param highY - int value representing the upper y coordinate of this rectangular region
	 * @param inCode - int value describing the code value that will be generated when this ClickRegionRectangle is triggered. 
	 */
	
	public ClickRegionRectangle(int inX, int inY, int wid, int hei, int inCode, int inPriority) {
		x = inX;
		y = inY;
		width = wid;
		height = hei;
		code = inCode;
		priority = inPriority;
	}
	
//---  Setter Methods   -----------------------------------------------------------------------
	
	public void setRegion(int inX, int inY, int wid, int hei) {
		x = inX;
		y = inY;
		width = wid;
		height = hei;
	}
	
//---  Getter Methods   -----------------------------------------------------------------------
	
	@Override
	public boolean wasClicked(int xPos, int yPos) {
		return xPos <= x + width && xPos >= x  && yPos <= y + height && yPos >= y;
	}
	
	@Override
	public int getCode() {
		return code;
	}
	
	public int getPriority() {
		return priority;
	}
	
//---  Mechanics   ----------------------------------------------------------------------------
	
	@Override
	public int compareTo(Detectable d) {
		int a = getPriority();
		int b = d.getPriority();
		if(a < b) {
			return 1;
		}
		else if(b < a) {
			return -1;
		}
		else {
			return 0;
		}
	}
	
}
